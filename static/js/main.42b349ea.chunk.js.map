{"version":3,"sources":["logo.svg","Context.js","Components/layout/heading.js","Components/questions/question.js","Components/questions/questions.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","questions","id","displayingText","console","log","info","Provider","title","dispatch","setState","value","this","props","children","Component","Consumer","Heading","heading","className","Question","toggleText","displayText","Fragment","onClick","Questions","selectedId","map","question","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42b349ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n switch(action.type) {\r\n   case 'TOGGLE_TEXT':\r\n    //  for obvious resone you cannot change a sub propertis of an object inside an object while returning the object\r\n    // in setState so you had to return the whole object\r\n    //  let myQuestions = state.questions;\r\n    //  if(!myQuestions[action.id - 1].displayingText) {\r\n    //   //  let info = myQuestions[action.id - 1].info;\r\n    //   const info = state.info[action.id - 1];\r\n    //    const PutTextquestion = myQuestions[action.id - 1];\r\n    //    PutTextquestion.info = info;\r\n    //    PutTextquestion.displayingText = !PutTextquestion.displayingText;\r\n\r\n    //    myQuestions[action.id - 1] = PutTextquestion;\r\n    //   //  console.log(myQuestions[action.id - 1]);\r\n    //   //  myQuestions[action.id - 1] = myQuestions[action.id - 1];\r\n    //   //  myQuestions[action.id - 1].displayingText = !myQuestions[action.id - 1].displayingText;\r\n\r\n    //  } else if(myQuestions[action.id - 1].displayingText) {\r\n    //   const PutTextquestion = myQuestions[action.id - 1];\r\n    //   PutTextquestion.info = '';\r\n    //   // flip the value of diplayingText\r\n    //   PutTextquestion.displayingText = !PutTextquestion.displayingText;\r\n    //   myQuestions[action.id - 1] = PutTextquestion;\r\n    //   console.log(state);\r\n    //   // myQuestions[action.id - 1].displayingText = !myQuestions[action.id - 1].displayingText;\r\n    //  }\r\n\r\n     if(!state.questions[action.id - 1].displayingText) {\r\n       console.log('this is calling from if');\r\n       state.questions[action.id - 1].info = state.info[action.id - 1];\r\n       state.questions[action.id - 1].displayingText = !state.questions[action.id - 1].displayingText;\r\n       const temp = state.questions[action.id - 1];\r\n     } else if(state.questions[action.id - 1].displayingText) {\r\n       console.log('this is calling from else');\r\n       state.questions[action.id - 1].info = '';\r\n       state.questions[action.id - 1].displayingText = !state.questions[action.id - 1].displayingText;\r\n\r\n     }\r\n     return {\r\n       ...state,\r\n      //  questions: state.questions,\r\n     }\r\n }\r\n}\r\n\r\nclass Provider extends Component {\r\n\r\n  state = {\r\n    questions : [\r\n      {\r\n        id: 1,\r\n        title: 'Do I have to allow the use of cookies?',\r\n        info:'Unicorn vinyl poutine brooklyn, next level direct trade iceland. Shaman copper mug church-key coloring book, whatever poutine normcore fixie cred kickstarter post-ironic street art.',\r\n\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'How do I change my My Page password?',\r\n        info:  'Coloring book forage photo booth gentrify lumbersexual. Migas chillwave poutine synth shoreditch, enamel pin thundercats fashion axe roof party polaroid chartreuse.',\r\n\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'What is BankID?',\r\n        info:   'Enamel pin fam sustainable woke whatever venmo. Authentic asymmetrical put a bird on it, lumbersexual activated charcoal kinfolk banjo cred pickled sartorial.',\r\n\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Whose birth number can I use?',\r\n        info:  'Edison bulb direct trade gentrify beard lo-fi seitan sustainable roof party franzen occupy squid. Knausgaard cronut succulents, scenester readymade shabby chic lyft. Copper mug meh vegan gentrify.',\r\n\r\n      },\r\n      {\r\n        id: 5,\r\n        title: 'When do I recieve a password ordered by letter?',\r\n        info: 'Locavore franzen fashion axe live-edge neutra irony synth af tilde shabby chic man braid chillwave waistcoat copper mug messenger bag. Banjo snackwave blog, microdosing thundercats migas vaporware viral lo-fi seitan ',\r\n\r\n      },\r\n    ],\r\n\r\n    dispatch: (action) => {\r\n      this.setState((state)=> {\r\n      return reducer(state, action);\r\n      })\r\n    },\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nconst Consumer = Context.Consumer;\r\nexport default Provider;\r\nexport {Consumer};","\r\nconst Heading = (props) => {\r\nconst {heading} = props;\r\n\r\n  return(\r\n    <h1 className=\"heading\">\r\n      {heading}\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default Heading;","import React,  { Component } from 'react';\r\nimport { AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';\r\n\r\nclass Question extends Component {\r\n\r\n  // toggleText(dispatch, id) {\r\n  //   dispatch({type: 'TOGGLE_TEXT', id: id});\r\n    \r\n  // }\r\n\r\n  toggleText = () => {\r\n    console.log('calling toggle function');\r\n    \r\n    this.setState((state) => {\r\n      return {\r\n        displayText: !state.displayText,\r\n      }\r\n    })\r\n  }\r\n\r\n  state = {\r\n    displayText: false,\r\n  }\r\n\r\n  render() {\r\n    const { id, title, info, } = this.props;\r\n    console.log(this.state.displayText);\r\n    return(\r\n           <React.Fragment>\r\n          <div key={id} className=\"singleQuestionContainer\">\r\n              <h3 className=\"question\">\r\n               <span className=\"questionTitle\"> {title} </span>  \r\n              <span onClick={this.toggleText} className=\"PlusMinus\"> \r\n                    <span> {(!this.state.displayText)  ? <AiOutlinePlus />  : <AiOutlineMinus />} </span>  \r\n              </span>   \r\n              </h3>\r\n              {/*  */}\r\n          {this.state.displayText ? \r\n            <p className=\"info\">\r\n            {info} \r\n            </p> : \r\n            null\r\n          }\r\n            \r\n            </div>\r\n         </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Question;","import React, {Component} from 'react';\r\nimport { Consumer } from '../../Context'; \r\nimport Question from './question';\r\n{/* <AiOutlineMinus /> */}\r\nclass Questions extends Component {\r\n\r\n  toggleText(dispatch, id) {\r\n    dispatch({type: 'TOGGLE_TEXT', id: id});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n     <Consumer>\r\n     {value => {\r\n       const {questions} = value;\r\n       const {dispatch} = value;\r\n       const {selectedId} = value;\r\n       console.log(value);\r\n       return(\r\n         <React.Fragment>\r\n           {\r\n             questions.map(question => {\r\n               return(\r\n                <Question key={question.id} title={question.title} info={question.info} id={question.id} dispatch={dispatch}  />\r\n               )\r\n             })         \r\n           }\r\n         </React.Fragment>\r\n       )\r\n     }\r\n     }\r\n     </Consumer>\r\n      // return questions here \r\n    )\r\n  }\r\n}\r\n\r\nexport default Questions;","import logo from './logo.svg';\nimport './MannualCss/style.css';\nimport Provider from './Context'; \nimport Heading from './Components/layout/heading';  \nimport Questions from './Components/questions/questions';\n\nfunction App() {\n  return (\n    <Provider>\n    <div className=\"container\">\n    < Heading heading=\"Question And Answer About Login\" />\n      <div className=\"questionContainer\">\n        < Questions />\n      </div>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}